---
title:      'How I get started with my first Android app? 1/3'
categories: [launch, build]
heroimage:  'hero_image.png'
excerpt:    'This is a short introduction to the apps development in Android' 
---

extends ../../views/layouts/_single

block content
  :markdown
  
This is the first post of three, in this post I am going to introduce to Android OS, a little bit of history, IDEs and the life cicle of an Android application. At the end of these three post you will have the enough skills to do your first app by yourself.


## 1.	What is Android?

This operation system belongs to Google. Android born in 2003 and was founded by Andy Rubin, 22 mounths later Google bought it. But until 2007 Android didn´t appear in markets. The first Nexus device was made by HTC and then some trades like Motorolla, Samsung and LG have made the next generations of Nexus devices. Nowdays Android is one of the most important OS and is used by nibe Billlion people so it seems that it would be a great idea to develop and application in this OS, maybe your app will be the next Flappy Bird!! If you want to know more information about Android history you can check this links:

*	[The history of android](http://www.androidcentral.com/android-history)

*	[Android](https://www.android.com/history/)


## 2.	Android IDE´s

There are some environments to develop in Android. People that start to develop in Android have this question, what IDE will I choose?. At first Eclipse was the most used, but in March of 2013 Android Studio was launched and few year later when the IDE was stable, it began to be the main choice for the most of developers. At this moment Android dindn´t support Android Developer Tools(ADT) so developer have to migrate their proyects to Android Studio([+info](http://developer.android.com/intl/es/tools/help/adt.html)), so nowdays you don´t have to choose between Eclipse or Android Studio, because Google has do it for you. It is necessary to speak about the crossplatform platforms that allows to write Android, iOS and Windows Phone apps using javascript and c++. But in this section we are going to speak about what IDE I will choose to start developing Android Apps. In my opinion you should choose a native language and understand the basics of the development in Android. The IDE that I suggest is Android Studio. The main feature is the integration with gradle, it is fantastic!!!, because one of the big problems in Android are the dependencies between libraries and with gradle it is solved. Another reason is the layout edition, with Android studio you can edit them, and see the results in real time, you don´t need to save and change between tabs.

![image](library/evsas.png)


##	3.	Android Activity Lifecycle

The applications in Android run into an activity. An Activity is an application component that provides a screen with which users can interact in order to do something, such as dial the phone, take a photo, send an email, or view a map. Each activity is given a window in which to draw its user interface. The window typically fills the screen, but may be smaller than the screen and float on top of other windows. This activity has a lifecycle there are the steps where the application throught. There Are the states of the activities [^1]:

1.	OnCreate():  Called when the activity is first create. This is where you should do all of your normal static set up — create views, bind data to lists, and so on.
2.	Onrestart():	Called after the activity has been stopped, just prior to it being started again.
3.	OnStart():	Called just before the activity becomes visible to the user.
4.	OnResume():	Called just before the activity starts interacting with the user. At this point the activity is at the top of the activity stack, with user input going to it.
5.	OnPause():	Called when the system is about to start resuming another activity. This method is typically used to commit unsaved changes to persistent data, stop animations and other things that may be consuming CPU, and so on. It should do whatever it does very quickly, because the next activity will not be resumed until it returns.
6.	OnStop():	Called when the activity is no longer visible to the user. This may happen because it is being destroyed, or because another activity (either an existing one or a new one) has been resumed and is covering it.
7.	OnDestroy():	Called before the activity is destroyed. This is the final call that the activity will receive. It could be called either because the activity is finishing (someone called finish() on it), or because the system is temporarily destroying this instance of the activity to save space.

![image](library/activity_lifecycle.png)


In the other hand exits the activity is associated with an User Inteface file, this is called Layout. In the layouts we are going to design the interface, we will put the text fields and other element that we want to use. Layouts have a lot of parammeters but we will see in more detail in the next post.


[^1]:Text and image provide by [Android](http://developer.android.com/intl/es/reference/android/app/Activity.html) 


