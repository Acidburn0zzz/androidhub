---
title:      'Infographic: Android in 2015'
categories: [design, build]
heroimage:  'android_2015_header.jpg'
excerpt:    'This infographic highlights a few important Android statistics from 2015' 
---

extends ../../views/layouts/_single

block content
  :marked
    This infographic highlights a few important Android statistics from 2015

    ![Android Infographic 2015 Statistics](/library/peachpellen/android_infographic.jpg)


    One of the most difficult things a developer deals with on a regular basis is fragmentation; and this is never more of an issue than when dealing with Android.

    Android has been available on smartphones for just over 7 years, (the first went on sale in October, 2008,) and in that time has grown to become the most-used mobile OS today; in no small part due to adoption in emerging markets, where affordability is a major factor for consumers.

    In the process of creating devices catering to the widest possible audience, Android became so incredibly fragmented that I can’t even find a reliable estimate of how many different resolutions there are; though over 100 seems reasonable. New Android devices are being produced so rapidly, with hardware varying so drastically, that it’s impossible for a developer to truly target every device.

    The point of this simple infographic is not to lament these difficulties, but rather to step back and appreciate that while the sheer magnitude of Android's fragmentation can be overwhelming, it's also impressive, and it's a "problem" we as developers have many solutionss for; and we are coming up with new ones all the time.

    My next article will discuss some tips for dealing with Android fragmentation, which will surely continue to increase in 2016 - but in the meantime, as a developer myself the best advice I can give is to use a third party SDK with support for multiple platforms.

    It doesn’t matter if you’re developing for Android, iOS, Windows Phone and Desktop, or just Android; many cross platform SDKs have built in functionality that greatly simplify scaling, as well as other issues you might encounter. (Just be sure to pick a good one; for 2D you can’t go wrong with [Platino](http://platino.io/) or [Intel’s XDK](https://software.intel.com/en-us/intel-xdk), while for 3D [Unity](http://unity3d.com/) is a fantastic choice.)

--------------
    If you have any tips for handling fragmentation, please share them with me via [Twitter](http://twitter.com/peachpellen) so I can include them in my next post :-)
