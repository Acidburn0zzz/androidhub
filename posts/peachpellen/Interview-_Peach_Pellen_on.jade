---
title:      'Interview- Peach Pellen on Android'
categories: [ideate]
heroimage:  'interview-header.jpg'
excerpt:    'Talking to Peach Pellen about all things Android.' 
---

extends ../../views/layouts/_single

block content
  :marked
    Talking to Peach Pellen about all things Android. Interview by Henry Fowler.

    #### How long have you worked with Android?
    Around 6 years now, after the engine I was using at the time added support for it, becoming cross platform. I realized that it would be crazy not to, as although it wasn't quite "one codebase" like it is today, I only had to update about 20% of the code and a whole other market was opened up to me.

    #### What features would you like to see added or improved in future versions of the OS?
    I know most people get more excited about updates that contain new keyboads, emojis, that kind of thing, but what I'd really love to see bloat reduced, honestly. Android has come a long way in the last year or two but any reduction to bloat or increase in performance still gets me more excited as a developer than anything else.

    Having said that, though not within the OS, I would *love* to see the official emulators become usable again; they're horrific, I tell everyone to use [Genymotion](https://www.genymotion.com/ "Genymotion Android emulators").

    #### What are your favorite/least favorite aspects of Android?
    My favorite is, by far, is the fact that it's open; seeing the various flavors of it running on different hardware is really cool, along with being able to access functionality you can't easily on other mobile OS, plus being able to list an app on Google Play without a long wait time for a review is great.

    My least favorite part of Android is probably a three-way-tie; it would have to be either [fragmentation](https://androidhub.intel.com/en/posts/peachpellen/Dealing_with_Android_Fragmentation.html "Dealing with Android Fragmentation"), the emulators, or the sheer volume of cheap devices out there. I think it's great there are a lot of affordable options, but when you have a new developer trying to blame your tools for the fact physics aren't running at 60 FPS on their $60 phone, it can be frustrating.

    #### Next innovation in Android?
    Android Apps for computers. This exists in various forms now, but there's still a way to go before I'd consider it an innovation out of beta. I'm most optimistic about [Console OS](http://consoleos.com/ "Console OS"), a project headed up by my fellow Intel Innovator, [Christohper Price](https://twitter.com/chrisprice).

    #### What is your opinion on Android compared to iOS as a developer?
    The fragmentation, as I mentioned, can be a real pain; I actually made an [infographic](https://androidhub.intel.com/en/posts/peachpellen/Infographic_Android_in_2015.html "Android Infographic") about it earlier in the year; dealing with that while trying to cater for sub-$100 devices is tough, but the flipside is that on iOS you are far more restricted as of course, it isn't open source.

    The other problem is monetization; there is a corrolation between these cheaper devices and the willingness of a user to spend money on an app. For me personally, I've made somewhere between 65-80x more revenue on iOS than Android.

    Both platforms are great, but especially as a new developer I think you have to work harder at your monetization strategy for Android.

    #### What about as a consumer?
    I prefer iOS. I'm sure that isn't a popular opinion on the Android Hub of all places, but I simply do; the user experience is more polished and moving between iOS and Android for work, I really feel the significant difference in lag. I suspect if I'd always used Android I probably wouldn't notice it as much.

    The camera also seems to be lacking in most cases, even in the higher end Android devices, what compared to iOS. I spend up to 30% of the year traveling and take a lot of photos, and I've found especially in low light my iPhone just gets better results.

    That's less of an issue on the highest end devices though, so I'm hopeful that may change in the future... until then though, I do find iOS preferable as a consumer. Plus, it's a lot easier to get a great user experience when the developer has about a dozen resolutions to consider, instead of hundreds!

    #### What do you feel is the best monetization strategy for Android developers?
    Some form of "freemium" with ads seems to be the way to go, unless you have a substantial existing following from a previous app/s, then you can get away with charging outright, which personally, I like as both a developer and a consumer.

    I've found that offering bonuses, such as in-game currency, for watching a video via something like Chartboost, along with regular banner or interstitial ads, to be the most effective way of monetization in games on Android; I can't really speak to non-game apps as I've had limited experience monetizing those.

    #### Do you have a favorite Android device?
    I have two! One is the Asus ZenFone 2, it's very fast and an all around great phone. The other is the Fossil Q Founder smartwatch. I got one last week and although it still feels a little less feature-rich than my Apple Watch, it's a really nice device. Both are powered by Intel, which is an obvious plus.

    #### Do you think tools like [Platino](http://platino.io/ "Cross platform iOS and Android in JavaScript") do a good enough job dealing with Android fragmentation?
    Well, at the current time I'm confident in saying Platino does it as well as any alternative, and better than most, but there are additional tweaks we're investigating to further improve that. I think there are a lot of great third party tools that do a good job here but with fragmentation only continuing to rise, I doubt there will ever be a 100% perfect solution.

    #### How did you get involved with mobile development yourself?
    I get asked that a lot, I like to tell people I used to be a writer, until I literally worked myself to death- I then pause for a moment to let them think I'm someone who misuses that word, "literally". Then I clarify by explaining I was working such long hours back when I was writing that I actually did die and needed to be revived during surgery. When I was able to go home a couple of weeks later I decided I'd like to get into software, and apps were the logical thing as the iPhone had just been released in Australia. At the time I was tech savvy but I'd never been a coder, so I set about teaching myself.

    #### Do you have any advice for other people looking to do get into coding without experience?
    I'd say it helps to have support. For me, I had my former partner Grant (R.I.P.) offering a sounding board when I was frustrated as I stumbled through my first lines of code, and within a year or so I'd found my now long-time friend and mentor, [Carlos Icaza](https://twitter.com/carlosicaza "Carlos Icaza Twitter") (founder of Ansca, creator of Corona SDK).

    I got very lucky there, beyond teaching me most of what I know about entrepreneurship, he also taught me how important it is that if you really, really want something, you persist through all obstacles, take the bull by the horns and even when it's rough, you ride it out. I think that applies to both warpping your head around something new, like app development, and to entrepreneurship; you know it's worth pursuing if you're willing to stick it out when it gets hard; and that ultimately makes it much more satisfying when you do see your efforts culminate in success.

    Beyond having that kind of support, it's worth noting that there are many books and tutorials available online that weren't around a few years ago, and engines such as [Platino](http://platino.io/ "Platino SDK") that make it much easier for developers who are starting out by allowing them to use languages like JavaScript.

  
